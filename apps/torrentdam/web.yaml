apiVersion: v1
kind: ConfigMap
metadata:
  name: web-config
  namespace: torrentdam
data:
  config.js: |
    export default {
      server: "server.torrents.home.lavrov.org"
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: torrentdam
spec:
  selector:
    matchLabels:
      app: web
  replicas: 1
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: nginx
          image: ghcr.io/torrentdam/web:d705a12ecfea26d66de1be5a563ddc38c85b344c
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /usr/share/nginx/html/config.js
              subPath: config.js
      volumes:
        - name: config
          configMap:
            name: web-config
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: torrentdam
spec:
  selector:
    app: web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web
  namespace: torrentdam
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: authelia-auth@kubernetescrd
spec:
  tls:
    - hosts:
        - "torrents.home.lavrov.org"
      secretName: nginx-tls
  rules:
    - host: "torrents.home.lavrov.org"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web
                port:
                  number: 80
